{
  "version": 3,
  "sources": ["../../svelte-persisted-store/index.ts"],
  "sourcesContent": ["import { writable as internal, type Writable } from 'svelte/store'\n\ndeclare type Updater<T> = (value: T) => T;\ndeclare type StoreDict<T> = { [key: string]: Persisted<T> }\n\nexport interface Persisted<T> extends Writable<T> {\n  reset: () => void\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\ninterface Stores {\n  local: StoreDict<any>,\n  session: StoreDict<any>,\n}\n\nconst stores: Stores = {\n  local: {},\n  session: {}\n}\n\nexport interface Serializer<T> {\n  parse(text: string): T\n  stringify(object: T): string\n}\n\nexport type StorageType = 'local' | 'session'\n\nexport interface Options<StoreType, SerializerType> {\n  serializer?: Serializer<SerializerType>\n  storage?: StorageType,\n  syncTabs?: boolean,\n  onError?: (e: unknown) => void\n  onWriteError?: (e: unknown) => void\n  onParseError?: (newValue: string | null, e: unknown) => void\n  beforeRead?: (val: SerializerType) => StoreType\n  beforeWrite?: (val: StoreType) => SerializerType\n}\n\nfunction getStorage(type: StorageType) {\n  return type === 'local' ? localStorage : sessionStorage\n}\n\n/** @deprecated `writable()` has been renamed to `persisted()` */\nexport function writable<StoreType, SerializerType = StoreType>(key: string, initialValue: StoreType, options?: Options<StoreType, SerializerType>): Persisted<StoreType> {\n  console.warn(\"writable() has been deprecated. Please use persisted() instead.\\n\\nchange:\\n\\nimport { writable } from 'svelte-persisted-store'\\n\\nto:\\n\\nimport { persisted } from 'svelte-persisted-store'\")\n  return persisted<StoreType, SerializerType>(key, initialValue, options)\n}\nexport function persisted<StoreType, SerializerType = StoreType>(key: string, initialValue: StoreType, options?: Options<StoreType, SerializerType>): Persisted<StoreType> {\n  if (options?.onError) console.warn(\"onError has been deprecated. Please use onWriteError instead\")\n\n  const serializer = options?.serializer ?? JSON\n  const storageType = options?.storage ?? 'local'\n  const syncTabs = options?.syncTabs ?? true\n  const onWriteError = options?.onWriteError ?? options?.onError ?? ((e) => console.error(`Error when writing value from persisted store \"${key}\" to ${storageType}`, e))\n  const onParseError = options?.onParseError ?? ((newVal, e) => console.error(`Error when parsing ${newVal ? '\"' + newVal + '\"' : \"value\"} from persisted store \"${key}\"`, e))\n\n  const beforeRead = options?.beforeRead ?? ((val) => val as unknown as StoreType)\n  const beforeWrite = options?.beforeWrite ?? ((val) => val as unknown as SerializerType)\n\n  const browser = typeof (window) !== 'undefined' && typeof (document) !== 'undefined'\n  const storage = browser ? getStorage(storageType) : null\n\n  function updateStorage(key: string, value: StoreType) {\n    const newVal = beforeWrite(value)\n\n    try {\n      storage?.setItem(key, serializer.stringify(newVal))\n    } catch (e) {\n      onWriteError(e)\n    }\n  }\n\n  function maybeLoadInitial(): StoreType {\n    function serialize(json: any) {\n      try {\n        return <SerializerType>serializer.parse(json)\n      } catch (e) {\n        onParseError(json, e)\n      }\n    }\n    const json = storage?.getItem(key)\n    if (json == null) return initialValue\n\n    const serialized = serialize(json)\n    if (serialized == null) return initialValue\n\n    const newVal = beforeRead(serialized)\n    return newVal\n  }\n\n  if (!stores[storageType][key]) {\n    const initial = maybeLoadInitial()\n    const store = internal(initial, (set) => {\n      if (browser && storageType == 'local' && syncTabs) {\n        const handleStorage = (event: StorageEvent) => {\n          if (event.key === key && event.newValue) {\n            let newVal: any\n            try {\n              newVal = serializer.parse(event.newValue)\n            } catch (e) {\n              onParseError(event.newValue, e)\n              return\n            }\n            const processedVal = beforeRead(newVal)\n\n            set(processedVal)\n          }\n        }\n\n        window.addEventListener(\"storage\", handleStorage)\n\n        return () => window.removeEventListener(\"storage\", handleStorage)\n      }\n    })\n\n    const { subscribe, set } = store\n\n    stores[storageType][key] = {\n      set(value: StoreType) {\n        set(value)\n        updateStorage(key, value)\n      },\n      update(callback: Updater<StoreType>) {\n        return store.update((last) => {\n          const value = callback(last)\n\n          updateStorage(key, value)\n\n          return value\n        })\n      },\n      reset() {\n        this.set(initialValue)\n      },\n      subscribe\n    }\n  }\n  return stores[storageType][key]\n}\n"],
  "mappings": "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",
  "names": ["writable", "key", "json", "set"]
}
